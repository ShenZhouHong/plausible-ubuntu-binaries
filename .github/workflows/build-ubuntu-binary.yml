---
name: Build Plausible Binary for Ubuntu Linux
run-name: Building Plausible Binary for Ubuntu Linux
on:
  push:
    branches: main
    paths-ignore: 
      - '**.md'
      - '.gitignore'
      - '.gitmodule'
      - 'build.sh'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # First we checkout the code and run the build script
      - name: Checkout git repository on to Github Actions runner
        uses: actions/checkout@v3

      - name: Build release inside Docker image
        run: ./build.sh

      # The next two steps package the build artifacts
      - name: Create compressed Gzip Tar archive of the release directory
        run: |
          tar --create --use-compress-program 'gzip -9' --file plausible-ubuntu-binary.tar.gz build/
          echo "targz_filename=plausible-ubuntu-binary.tar.gz" >> $GITHUB_ENV
          echo "targz_filepath=$(realpath plausible-ubuntu-binary.tar.gz)" >> $GITHUB_ENV
      
      - name: Create compressed ZIP archive of the release directory
        run: |
          zip -9 --quiet --recurse-paths plausible-ubuntu-binary.zip build/
          echo "zip_filename=plausible-ubuntu-binary.zip" >> $GITHUB_ENV
          echo "zip_filepath=$(realpath plausible-ubuntu-binary.zip)" >> $GITHUB_ENV

      # Finally, we prepare the release for Github
      - name: Define release tag name
        run: echo "tag_name=plausible-ubuntu-build-${{ github.run_number }}" >> "$GITHUB_ENV"

      - name: Create Github release
        if: ${{ github.ref_name }} == "main"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: Plausible Ubuntu Binaries for tag ${{ env.tag_name }}.
          body: |
            Automatic release build for ${{ github.ref_name }} branch on tag ${{ env.tag_name }}.
          draft: false
          prerelease: false

      - name: Upload Gzip Tar Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.targz_filepath }}
          asset_name: ${{ env.targz_filename }}
          asset_content_type: application/gzip

      - name: Upload Zip Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.zip_filepath }}
          asset_name: ${{ env.zip_filename }}
          asset_content_type: application/gzip